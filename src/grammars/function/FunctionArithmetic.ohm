include '../arithmetic/BasicArithmetic.ohm'

FunctionArithmetic <: BasicArithmetic {
  P
    := "(" Expression ")"  -- parenthesis
    | Function
    | Primitive

  Function
    = DegreesToRadians
    | RadiansToDegrees
    | LogBaseFunction
    | JavascriptMathObjectFunction

  LogBaseFunction 
    = caseInsensitive<"logb"> "(" number "," number ")"
    | caseInsensitive<"logBase"> "(" number "," number ")"

  DegreesToRadians 
    = caseInsensitive<"degToRad"> "(" number ")"
    | caseInsensitive<"degreesToRadians"> "(" number ")"
    | caseInsensitive<"radians"> "(" number ")"
    | caseInsensitive<"toRadians"> "(" number ")"

  RadiansToDegrees 
    = caseInsensitive<"radToDeg"> "(" number ")"
    | caseInsensitive<"radiansToDegrees"> "(" number ")"
    | caseInsensitive<"degrees"> "(" number ")"
    | caseInsensitive<"toDegrees"> "(" number ")"

  // Pass-through for Math.* functions from JS
  JavascriptMathObjectFunction = mathJsName "(" ListOf<Expression, ","> ")"

  mathJsName 
 	  = caseInsensitive<"sinh">
    | caseInsensitive<"sin">
    | caseInsensitive<"abs">
    | caseInsensitive<"acosh">
    | caseInsensitive<"acos">
    | caseInsensitive<"asinh">
    | caseInsensitive<"asin">
    | caseInsensitive<"atan2">
    | caseInsensitive<"atanh">
    | caseInsensitive<"atan">
    | caseInsensitive<"cbrt">
    | caseInsensitive<"ceil">
    | caseInsensitive<"clz32">
    | caseInsensitive<"cosh">
    | caseInsensitive<"cos">
    | caseInsensitive<"expm1">
    | caseInsensitive<"exp">
    | caseInsensitive<"floor">
    | caseInsensitive<"fround">
    | caseInsensitive<"hypot">
    | caseInsensitive<"imul">
    | caseInsensitive<"log10">
    | caseInsensitive<"log1p">
    | caseInsensitive<"log2">
    | caseInsensitive<"log">
    | caseInsensitive<"max">
    | caseInsensitive<"min">
    | caseInsensitive<"pow">
    | caseInsensitive<"random">
    | caseInsensitive<"round">
    | caseInsensitive<"sign">
    | caseInsensitive<"sqrt">
    | caseInsensitive<"tanh">
    | caseInsensitive<"tan">
    | caseInsensitive<"trunc">
} 